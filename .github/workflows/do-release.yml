name: Release Orchest

# Allows triggering the workflow manually
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release'
        required: true

jobs:
  build_manifests:
    runs-on: ubuntu-latest
    outputs:
      release_version: ${{ steps.release_version.outputs.release_version }}
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-go@v3
        with:
          go-version: ">=1.19.0"

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y make
          curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
          chmod 700 get_helm.sh
          ./get_helm.sh -v v3.9.0

      - name: Set release version
        id: release_version
        run: |
          echo ::set-output name=release_version::${{ github.event.inputs.version }}

      - name: Build release
        id: build
        run: |
          TAGNAME=${RELEASE_VERSION} make -C ./services/orchest-controller manifestgen
        env:
          RELEASE_VERSION: ${{ github.event.inputs.version }}

      - uses: actions/upload-artifact@v3
        with:
          name: manifests
          path: ./services/orchest-controller/deploy/k8s
      - uses: actions/upload-artifact@v3
        with:
          name: examples
          path: ./services/orchest-controller/deploy/examples/example-orchestcluster.yaml

  trigger_release:
    needs: [build_manifests]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - uses: actions/download-artifact@v3

      - name: Create new release with auto-generated release notes
        env:
          GH_TOKEN: ${{ secrets.WORKFLOW_TOKEN }}
          RELEASE_VERSION: ${{ needs.build_manifests.outputs.release_version }}
          DEBUG: api
        run: |
          gh release create ${RELEASE_VERSION} --generate-notes ./manifests/* ./examples/*
